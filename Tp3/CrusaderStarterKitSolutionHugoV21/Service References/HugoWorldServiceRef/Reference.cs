//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.18444
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HugoWorldServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Classe", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Classe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Hero> HeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Monde MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomClasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatPoidsDexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatPoidsIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatPoidsStamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatPoidsStrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Hero> Heroes {
            get {
                return this.HeroesField;
            }
            set {
                if ((object.ReferenceEquals(this.HeroesField, value) != true)) {
                    this.HeroesField = value;
                    this.RaisePropertyChanged("Heroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Monde Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomClasse {
            get {
                return this.NomClasseField;
            }
            set {
                if ((object.ReferenceEquals(this.NomClasseField, value) != true)) {
                    this.NomClasseField = value;
                    this.RaisePropertyChanged("NomClasse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatPoidsDex {
            get {
                return this.StatPoidsDexField;
            }
            set {
                if ((this.StatPoidsDexField.Equals(value) != true)) {
                    this.StatPoidsDexField = value;
                    this.RaisePropertyChanged("StatPoidsDex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatPoidsInt {
            get {
                return this.StatPoidsIntField;
            }
            set {
                if ((this.StatPoidsIntField.Equals(value) != true)) {
                    this.StatPoidsIntField = value;
                    this.RaisePropertyChanged("StatPoidsInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatPoidsStam {
            get {
                return this.StatPoidsStamField;
            }
            set {
                if ((this.StatPoidsStamField.Equals(value) != true)) {
                    this.StatPoidsStamField = value;
                    this.RaisePropertyChanged("StatPoidsStam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatPoidsStr {
            get {
                return this.StatPoidsStrField;
            }
            set {
                if ((this.StatPoidsStrField.Equals(value) != true)) {
                    this.StatPoidsStrField = value;
                    this.RaisePropertyChanged("StatPoidsStr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Monde", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Monde : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Classe> ClassesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Hero> HeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Item> ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LimiteYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Monstre> MonstresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.ObjetMonde> ObjetMondesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Classe> Classes {
            get {
                return this.ClassesField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassesField, value) != true)) {
                    this.ClassesField = value;
                    this.RaisePropertyChanged("Classes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Hero> Heroes {
            get {
                return this.HeroesField;
            }
            set {
                if ((object.ReferenceEquals(this.HeroesField, value) != true)) {
                    this.HeroesField = value;
                    this.RaisePropertyChanged("Heroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Item> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteX {
            get {
                return this.LimiteXField;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteXField, value) != true)) {
                    this.LimiteXField = value;
                    this.RaisePropertyChanged("LimiteX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimiteY {
            get {
                return this.LimiteYField;
            }
            set {
                if ((object.ReferenceEquals(this.LimiteYField, value) != true)) {
                    this.LimiteYField = value;
                    this.RaisePropertyChanged("LimiteY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Monstre> Monstres {
            get {
                return this.MonstresField;
            }
            set {
                if ((object.ReferenceEquals(this.MonstresField, value) != true)) {
                    this.MonstresField = value;
                    this.RaisePropertyChanged("Monstres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.ObjetMonde> ObjetMondes {
            get {
                return this.ObjetMondesField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjetMondesField, value) != true)) {
                    this.ObjetMondesField = value;
                    this.RaisePropertyChanged("ObjetMondes");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hero", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Hero : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ArgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Classe ClasseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClasseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.CompteJoueur CompteJoueurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompteJoueurIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Item> ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Monde MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NiveauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseDexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseIntField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseStamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatBaseStrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Argent {
            get {
                return this.ArgentField;
            }
            set {
                if ((this.ArgentField.Equals(value) != true)) {
                    this.ArgentField = value;
                    this.RaisePropertyChanged("Argent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Classe Classe {
            get {
                return this.ClasseField;
            }
            set {
                if ((object.ReferenceEquals(this.ClasseField, value) != true)) {
                    this.ClasseField = value;
                    this.RaisePropertyChanged("Classe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClasseId {
            get {
                return this.ClasseIdField;
            }
            set {
                if ((this.ClasseIdField.Equals(value) != true)) {
                    this.ClasseIdField = value;
                    this.RaisePropertyChanged("ClasseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.CompteJoueur CompteJoueur {
            get {
                return this.CompteJoueurField;
            }
            set {
                if ((object.ReferenceEquals(this.CompteJoueurField, value) != true)) {
                    this.CompteJoueurField = value;
                    this.RaisePropertyChanged("CompteJoueur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompteJoueurId {
            get {
                return this.CompteJoueurIdField;
            }
            set {
                if ((this.CompteJoueurIdField.Equals(value) != true)) {
                    this.CompteJoueurIdField = value;
                    this.RaisePropertyChanged("CompteJoueurId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Connected {
            get {
                return this.ConnectedField;
            }
            set {
                if ((this.ConnectedField.Equals(value) != true)) {
                    this.ConnectedField = value;
                    this.RaisePropertyChanged("Connected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Experience {
            get {
                return this.ExperienceField;
            }
            set {
                if ((this.ExperienceField.Equals(value) != true)) {
                    this.ExperienceField = value;
                    this.RaisePropertyChanged("Experience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Item> Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Monde Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Niveau {
            get {
                return this.NiveauField;
            }
            set {
                if ((this.NiveauField.Equals(value) != true)) {
                    this.NiveauField = value;
                    this.RaisePropertyChanged("Niveau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseDex {
            get {
                return this.StatBaseDexField;
            }
            set {
                if ((this.StatBaseDexField.Equals(value) != true)) {
                    this.StatBaseDexField = value;
                    this.RaisePropertyChanged("StatBaseDex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseInt {
            get {
                return this.StatBaseIntField;
            }
            set {
                if ((this.StatBaseIntField.Equals(value) != true)) {
                    this.StatBaseIntField = value;
                    this.RaisePropertyChanged("StatBaseInt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseStam {
            get {
                return this.StatBaseStamField;
            }
            set {
                if ((this.StatBaseStamField.Equals(value) != true)) {
                    this.StatBaseStamField = value;
                    this.RaisePropertyChanged("StatBaseStam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatBaseStr {
            get {
                return this.StatBaseStrField;
            }
            set {
                if ((this.StatBaseStrField.Equals(value) != true)) {
                    this.StatBaseStrField = value;
                    this.RaisePropertyChanged("StatBaseStr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompteJoueur", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class CompteJoueur : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourrielField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Hero> HeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomUtilisateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeUtilisateurField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Courriel {
            get {
                return this.CourrielField;
            }
            set {
                if ((object.ReferenceEquals(this.CourrielField, value) != true)) {
                    this.CourrielField = value;
                    this.RaisePropertyChanged("Courriel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Hero> Heroes {
            get {
                return this.HeroesField;
            }
            set {
                if ((object.ReferenceEquals(this.HeroesField, value) != true)) {
                    this.HeroesField = value;
                    this.RaisePropertyChanged("Heroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomUtilisateur {
            get {
                return this.NomUtilisateurField;
            }
            set {
                if ((object.ReferenceEquals(this.NomUtilisateurField, value) != true)) {
                    this.NomUtilisateurField = value;
                    this.RaisePropertyChanged("NomUtilisateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeUtilisateur {
            get {
                return this.TypeUtilisateurField;
            }
            set {
                if ((this.TypeUtilisateurField.Equals(value) != true)) {
                    this.TypeUtilisateurField = value;
                    this.RaisePropertyChanged("TypeUtilisateur");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.EffetItem> EffetItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<HugoWorldServiceRef.Hero> HeroesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Monde MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NiveauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PoidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqDexteriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqEnduranceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqForceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqIntelligenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReqNiveauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ValeurArgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.EffetItem> EffetItems {
            get {
                return this.EffetItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.EffetItemsField, value) != true)) {
                    this.EffetItemsField = value;
                    this.RaisePropertyChanged("EffetItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<HugoWorldServiceRef.Hero> Heroes {
            get {
                return this.HeroesField;
            }
            set {
                if ((object.ReferenceEquals(this.HeroesField, value) != true)) {
                    this.HeroesField = value;
                    this.RaisePropertyChanged("Heroes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Monde Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Niveau {
            get {
                return this.NiveauField;
            }
            set {
                if ((this.NiveauField.Equals(value) != true)) {
                    this.NiveauField = value;
                    this.RaisePropertyChanged("Niveau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Poids {
            get {
                return this.PoidsField;
            }
            set {
                if ((this.PoidsField.Equals(value) != true)) {
                    this.PoidsField = value;
                    this.RaisePropertyChanged("Poids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantite {
            get {
                return this.QuantiteField;
            }
            set {
                if ((this.QuantiteField.Equals(value) != true)) {
                    this.QuantiteField = value;
                    this.RaisePropertyChanged("Quantite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqDexterite {
            get {
                return this.ReqDexteriteField;
            }
            set {
                if ((this.ReqDexteriteField.Equals(value) != true)) {
                    this.ReqDexteriteField = value;
                    this.RaisePropertyChanged("ReqDexterite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqEndurance {
            get {
                return this.ReqEnduranceField;
            }
            set {
                if ((this.ReqEnduranceField.Equals(value) != true)) {
                    this.ReqEnduranceField = value;
                    this.RaisePropertyChanged("ReqEndurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqForce {
            get {
                return this.ReqForceField;
            }
            set {
                if ((this.ReqForceField.Equals(value) != true)) {
                    this.ReqForceField = value;
                    this.RaisePropertyChanged("ReqForce");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqIntelligence {
            get {
                return this.ReqIntelligenceField;
            }
            set {
                if ((this.ReqIntelligenceField.Equals(value) != true)) {
                    this.ReqIntelligenceField = value;
                    this.RaisePropertyChanged("ReqIntelligence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReqNiveau {
            get {
                return this.ReqNiveauField;
            }
            set {
                if ((this.ReqNiveauField.Equals(value) != true)) {
                    this.ReqNiveauField = value;
                    this.RaisePropertyChanged("ReqNiveau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ValeurArgent {
            get {
                return this.ValeurArgentField;
            }
            set {
                if ((this.ValeurArgentField.Equals(value) != true)) {
                    this.ValeurArgentField = value;
                    this.RaisePropertyChanged("ValeurArgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EffetItem", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service")]
    [System.SerializableAttribute()]
    public partial class EffetItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Item ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeEffetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValeurEffetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Item Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeEffet {
            get {
                return this.TypeEffetField;
            }
            set {
                if ((this.TypeEffetField.Equals(value) != true)) {
                    this.TypeEffetField = value;
                    this.RaisePropertyChanged("TypeEffet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValeurEffet {
            get {
                return this.ValeurEffetField;
            }
            set {
                if ((this.ValeurEffetField.Equals(value) != true)) {
                    this.ValeurEffetField = value;
                    this.RaisePropertyChanged("ValeurEffet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Monstre", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Monstre : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Monde MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NiveauField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatDmgMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float StatDmgMinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatPVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Monde Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Niveau {
            get {
                return this.NiveauField;
            }
            set {
                if ((this.NiveauField.Equals(value) != true)) {
                    this.NiveauField = value;
                    this.RaisePropertyChanged("Niveau");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatDmgMax {
            get {
                return this.StatDmgMaxField;
            }
            set {
                if ((this.StatDmgMaxField.Equals(value) != true)) {
                    this.StatDmgMaxField = value;
                    this.RaisePropertyChanged("StatDmgMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float StatDmgMin {
            get {
                return this.StatDmgMinField;
            }
            set {
                if ((this.StatDmgMinField.Equals(value) != true)) {
                    this.StatDmgMinField = value;
                    this.RaisePropertyChanged("StatDmgMin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatPV {
            get {
                return this.StatPVField;
            }
            set {
                if ((this.StatPVField.Equals(value) != true)) {
                    this.StatPVField = value;
                    this.RaisePropertyChanged("StatPV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjetMonde", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class ObjetMonde : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HugoWorldServiceRef.Monde MondeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MondeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeObjetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int yField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HugoWorldServiceRef.Monde Monde {
            get {
                return this.MondeField;
            }
            set {
                if ((object.ReferenceEquals(this.MondeField, value) != true)) {
                    this.MondeField = value;
                    this.RaisePropertyChanged("Monde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MondeId {
            get {
                return this.MondeIdField;
            }
            set {
                if ((this.MondeIdField.Equals(value) != true)) {
                    this.MondeIdField = value;
                    this.RaisePropertyChanged("MondeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeObjet {
            get {
                return this.TypeObjetField;
            }
            set {
                if ((this.TypeObjetField.Equals(value) != true)) {
                    this.TypeObjetField = value;
                    this.RaisePropertyChanged("TypeObjet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Elements", Namespace="http://schemas.datacontract.org/2004/07/Tp3Service")]
    [System.SerializableAttribute()]
    public partial class Elements : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IClasseController")]
    public interface IClasseController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/CreateClass", ReplyAction="http://tempuri.org/IClasseController/CreateClassResponse")]
        void CreateClass(string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/CreateClass", ReplyAction="http://tempuri.org/IClasseController/CreateClassResponse")]
        System.Threading.Tasks.Task CreateClassAsync(string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/DeleteClass", ReplyAction="http://tempuri.org/IClasseController/DeleteClassResponse")]
        void DeleteClass(int iClassID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/DeleteClass", ReplyAction="http://tempuri.org/IClasseController/DeleteClassResponse")]
        System.Threading.Tasks.Task DeleteClassAsync(int iClassID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/EditClassFromWorld", ReplyAction="http://tempuri.org/IClasseController/EditClassFromWorldResponse")]
        void EditClassFromWorld(int iClasseID, string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/EditClassFromWorld", ReplyAction="http://tempuri.org/IClasseController/EditClassFromWorldResponse")]
        System.Threading.Tasks.Task EditClassFromWorldAsync(int iClasseID, string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/GetListClasses", ReplyAction="http://tempuri.org/IClasseController/GetListClassesResponse")]
        System.Collections.Generic.List<HugoWorldServiceRef.Classe> GetListClasses(int mondeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/GetListClasses", ReplyAction="http://tempuri.org/IClasseController/GetListClassesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Classe>> GetListClassesAsync(int mondeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/GetClassDescription", ReplyAction="http://tempuri.org/IClasseController/GetClassDescriptionResponse")]
        string GetClassDescription(string sClassName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/GetClassDescription", ReplyAction="http://tempuri.org/IClasseController/GetClassDescriptionResponse")]
        System.Threading.Tasks.Task<string> GetClassDescriptionAsync(string sClassName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/GetClassID", ReplyAction="http://tempuri.org/IClasseController/GetClassIDResponse")]
        System.Nullable<int> GetClassID(string sClassName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/GetClassID", ReplyAction="http://tempuri.org/IClasseController/GetClassIDResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetClassIDAsync(string sClassName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/FindClasseOfHero", ReplyAction="http://tempuri.org/IClasseController/FindClasseOfHeroResponse")]
        HugoWorldServiceRef.Classe FindClasseOfHero(int iHeroID, int iMondeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClasseController/FindClasseOfHero", ReplyAction="http://tempuri.org/IClasseController/FindClasseOfHeroResponse")]
        System.Threading.Tasks.Task<HugoWorldServiceRef.Classe> FindClasseOfHeroAsync(int iHeroID, int iMondeID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClasseControllerChannel : HugoWorldServiceRef.IClasseController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClasseControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IClasseController>, HugoWorldServiceRef.IClasseController {
        
        public ClasseControllerClient() {
        }
        
        public ClasseControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClasseControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClasseControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClasseControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateClass(string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeId) {
            base.Channel.CreateClass(sNomClasse, sDescription, fStatPoidsStr, fStatPoidsDex, fStatPoidsInt, fStatPoidsStam, iMondeId);
        }
        
        public System.Threading.Tasks.Task CreateClassAsync(string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeId) {
            return base.Channel.CreateClassAsync(sNomClasse, sDescription, fStatPoidsStr, fStatPoidsDex, fStatPoidsInt, fStatPoidsStam, iMondeId);
        }
        
        public void DeleteClass(int iClassID) {
            base.Channel.DeleteClass(iClassID);
        }
        
        public System.Threading.Tasks.Task DeleteClassAsync(int iClassID) {
            return base.Channel.DeleteClassAsync(iClassID);
        }
        
        public void EditClassFromWorld(int iClasseID, string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeID) {
            base.Channel.EditClassFromWorld(iClasseID, sNomClasse, sDescription, fStatPoidsStr, fStatPoidsDex, fStatPoidsInt, fStatPoidsStam, iMondeID);
        }
        
        public System.Threading.Tasks.Task EditClassFromWorldAsync(int iClasseID, string sNomClasse, string sDescription, float fStatPoidsStr, float fStatPoidsDex, float fStatPoidsInt, float fStatPoidsStam, int iMondeID) {
            return base.Channel.EditClassFromWorldAsync(iClasseID, sNomClasse, sDescription, fStatPoidsStr, fStatPoidsDex, fStatPoidsInt, fStatPoidsStam, iMondeID);
        }
        
        public System.Collections.Generic.List<HugoWorldServiceRef.Classe> GetListClasses(int mondeID) {
            return base.Channel.GetListClasses(mondeID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Classe>> GetListClassesAsync(int mondeID) {
            return base.Channel.GetListClassesAsync(mondeID);
        }
        
        public string GetClassDescription(string sClassName) {
            return base.Channel.GetClassDescription(sClassName);
        }
        
        public System.Threading.Tasks.Task<string> GetClassDescriptionAsync(string sClassName) {
            return base.Channel.GetClassDescriptionAsync(sClassName);
        }
        
        public System.Nullable<int> GetClassID(string sClassName) {
            return base.Channel.GetClassID(sClassName);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetClassIDAsync(string sClassName) {
            return base.Channel.GetClassIDAsync(sClassName);
        }
        
        public HugoWorldServiceRef.Classe FindClasseOfHero(int iHeroID, int iMondeID) {
            return base.Channel.FindClasseOfHero(iHeroID, iMondeID);
        }
        
        public System.Threading.Tasks.Task<HugoWorldServiceRef.Classe> FindClasseOfHeroAsync(int iHeroID, int iMondeID) {
            return base.Channel.FindClasseOfHeroAsync(iHeroID, iMondeID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IMondeController")]
    public interface IMondeController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/CreateMonde", ReplyAction="http://tempuri.org/IMondeController/CreateMondeResponse")]
        void CreateMonde(string iLimiteX, string iLimiteY, string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/CreateMonde", ReplyAction="http://tempuri.org/IMondeController/CreateMondeResponse")]
        System.Threading.Tasks.Task CreateMondeAsync(string iLimiteX, string iLimiteY, string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/EditMonde1", ReplyAction="http://tempuri.org/IMondeController/EditMonde1Response")]
        void EditMonde1(int iID, string sDescription, string iLimiteX, string iLimiteY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/EditMonde1", ReplyAction="http://tempuri.org/IMondeController/EditMonde1Response")]
        System.Threading.Tasks.Task EditMonde1Async(int iID, string sDescription, string iLimiteX, string iLimiteY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/EditMonde2", ReplyAction="http://tempuri.org/IMondeController/EditMonde2Response")]
        void EditMonde2(int iID, string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/EditMonde2", ReplyAction="http://tempuri.org/IMondeController/EditMonde2Response")]
        System.Threading.Tasks.Task EditMonde2Async(int iID, string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/EditMonde3", ReplyAction="http://tempuri.org/IMondeController/EditMonde3Response")]
        void EditMonde3(int iID, string iLimiteX, string iLimiteY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/EditMonde3", ReplyAction="http://tempuri.org/IMondeController/EditMonde3Response")]
        System.Threading.Tasks.Task EditMonde3Async(int iID, string iLimiteX, string iLimiteY);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/DeleteMonde", ReplyAction="http://tempuri.org/IMondeController/DeleteMondeResponse")]
        void DeleteMonde(int iID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/DeleteMonde", ReplyAction="http://tempuri.org/IMondeController/DeleteMondeResponse")]
        System.Threading.Tasks.Task DeleteMondeAsync(int iID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/GetWorldID", ReplyAction="http://tempuri.org/IMondeController/GetWorldIDResponse")]
        System.Nullable<int> GetWorldID(string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/GetWorldID", ReplyAction="http://tempuri.org/IMondeController/GetWorldIDResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetWorldIDAsync(string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/GetListMonde", ReplyAction="http://tempuri.org/IMondeController/GetListMondeResponse")]
        System.Collections.Generic.List<HugoWorldServiceRef.Monde> GetListMonde();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMondeController/GetListMonde", ReplyAction="http://tempuri.org/IMondeController/GetListMondeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Monde>> GetListMondeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMondeControllerChannel : HugoWorldServiceRef.IMondeController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MondeControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IMondeController>, HugoWorldServiceRef.IMondeController {
        
        public MondeControllerClient() {
        }
        
        public MondeControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MondeControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MondeControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MondeControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateMonde(string iLimiteX, string iLimiteY, string sDescription) {
            base.Channel.CreateMonde(iLimiteX, iLimiteY, sDescription);
        }
        
        public System.Threading.Tasks.Task CreateMondeAsync(string iLimiteX, string iLimiteY, string sDescription) {
            return base.Channel.CreateMondeAsync(iLimiteX, iLimiteY, sDescription);
        }
        
        public void EditMonde1(int iID, string sDescription, string iLimiteX, string iLimiteY) {
            base.Channel.EditMonde1(iID, sDescription, iLimiteX, iLimiteY);
        }
        
        public System.Threading.Tasks.Task EditMonde1Async(int iID, string sDescription, string iLimiteX, string iLimiteY) {
            return base.Channel.EditMonde1Async(iID, sDescription, iLimiteX, iLimiteY);
        }
        
        public void EditMonde2(int iID, string sDescription) {
            base.Channel.EditMonde2(iID, sDescription);
        }
        
        public System.Threading.Tasks.Task EditMonde2Async(int iID, string sDescription) {
            return base.Channel.EditMonde2Async(iID, sDescription);
        }
        
        public void EditMonde3(int iID, string iLimiteX, string iLimiteY) {
            base.Channel.EditMonde3(iID, iLimiteX, iLimiteY);
        }
        
        public System.Threading.Tasks.Task EditMonde3Async(int iID, string iLimiteX, string iLimiteY) {
            return base.Channel.EditMonde3Async(iID, iLimiteX, iLimiteY);
        }
        
        public void DeleteMonde(int iID) {
            base.Channel.DeleteMonde(iID);
        }
        
        public System.Threading.Tasks.Task DeleteMondeAsync(int iID) {
            return base.Channel.DeleteMondeAsync(iID);
        }
        
        public System.Nullable<int> GetWorldID(string sDescription) {
            return base.Channel.GetWorldID(sDescription);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetWorldIDAsync(string sDescription) {
            return base.Channel.GetWorldIDAsync(sDescription);
        }
        
        public System.Collections.Generic.List<HugoWorldServiceRef.Monde> GetListMonde() {
            return base.Channel.GetListMonde();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Monde>> GetListMondeAsync() {
            return base.Channel.GetListMondeAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.ICompteJoueurController")]
    public interface ICompteJoueurController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/CreatePlayer", ReplyAction="http://tempuri.org/ICompteJoueurController/CreatePlayerResponse")]
        bool CreatePlayer(string sUsername, string sPass, string sEmail, string sFname, string sLname, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/CreatePlayer", ReplyAction="http://tempuri.org/ICompteJoueurController/CreatePlayerResponse")]
        System.Threading.Tasks.Task<bool> CreatePlayerAsync(string sUsername, string sPass, string sEmail, string sFname, string sLname, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/DeletePlayer", ReplyAction="http://tempuri.org/ICompteJoueurController/DeletePlayerResponse")]
        void DeletePlayer(string sUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/DeletePlayer", ReplyAction="http://tempuri.org/ICompteJoueurController/DeletePlayerResponse")]
        System.Threading.Tasks.Task DeletePlayerAsync(string sUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/EditPlayer1", ReplyAction="http://tempuri.org/ICompteJoueurController/EditPlayer1Response")]
        void EditPlayer1(string sUsername, string sEmail, string sFname, string sLname, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/EditPlayer1", ReplyAction="http://tempuri.org/ICompteJoueurController/EditPlayer1Response")]
        System.Threading.Tasks.Task EditPlayer1Async(string sUsername, string sEmail, string sFname, string sLname, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/EditPlayer2", ReplyAction="http://tempuri.org/ICompteJoueurController/EditPlayer2Response")]
        void EditPlayer2(int id, string sEmail, string sFname, string sLname, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/EditPlayer2", ReplyAction="http://tempuri.org/ICompteJoueurController/EditPlayer2Response")]
        System.Threading.Tasks.Task EditPlayer2Async(int id, string sEmail, string sFname, string sLname, int iType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/ValidatePlayer", ReplyAction="http://tempuri.org/ICompteJoueurController/ValidatePlayerResponse")]
        bool ValidatePlayer(string sUsername, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/ValidatePlayer", ReplyAction="http://tempuri.org/ICompteJoueurController/ValidatePlayerResponse")]
        System.Threading.Tasks.Task<bool> ValidatePlayerAsync(string sUsername, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/GetUserID", ReplyAction="http://tempuri.org/ICompteJoueurController/GetUserIDResponse")]
        System.Nullable<int> GetUserID(string sUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/GetUserID", ReplyAction="http://tempuri.org/ICompteJoueurController/GetUserIDResponse")]
        System.Threading.Tasks.Task<System.Nullable<int>> GetUserIDAsync(string sUsername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/ValidateAdmin", ReplyAction="http://tempuri.org/ICompteJoueurController/ValidateAdminResponse")]
        bool ValidateAdmin(string sUsername, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/ValidateAdmin", ReplyAction="http://tempuri.org/ICompteJoueurController/ValidateAdminResponse")]
        System.Threading.Tasks.Task<bool> ValidateAdminAsync(string sUsername, string sPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/ValidateAdmin2", ReplyAction="http://tempuri.org/ICompteJoueurController/ValidateAdmin2Response")]
        bool ValidateAdmin2(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICompteJoueurController/ValidateAdmin2", ReplyAction="http://tempuri.org/ICompteJoueurController/ValidateAdmin2Response")]
        System.Threading.Tasks.Task<bool> ValidateAdmin2Async(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICompteJoueurControllerChannel : HugoWorldServiceRef.ICompteJoueurController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompteJoueurControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.ICompteJoueurController>, HugoWorldServiceRef.ICompteJoueurController {
        
        public CompteJoueurControllerClient() {
        }
        
        public CompteJoueurControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CompteJoueurControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompteJoueurControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CompteJoueurControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreatePlayer(string sUsername, string sPass, string sEmail, string sFname, string sLname, int iType) {
            return base.Channel.CreatePlayer(sUsername, sPass, sEmail, sFname, sLname, iType);
        }
        
        public System.Threading.Tasks.Task<bool> CreatePlayerAsync(string sUsername, string sPass, string sEmail, string sFname, string sLname, int iType) {
            return base.Channel.CreatePlayerAsync(sUsername, sPass, sEmail, sFname, sLname, iType);
        }
        
        public void DeletePlayer(string sUsername) {
            base.Channel.DeletePlayer(sUsername);
        }
        
        public System.Threading.Tasks.Task DeletePlayerAsync(string sUsername) {
            return base.Channel.DeletePlayerAsync(sUsername);
        }
        
        public void EditPlayer1(string sUsername, string sEmail, string sFname, string sLname, int iType) {
            base.Channel.EditPlayer1(sUsername, sEmail, sFname, sLname, iType);
        }
        
        public System.Threading.Tasks.Task EditPlayer1Async(string sUsername, string sEmail, string sFname, string sLname, int iType) {
            return base.Channel.EditPlayer1Async(sUsername, sEmail, sFname, sLname, iType);
        }
        
        public void EditPlayer2(int id, string sEmail, string sFname, string sLname, int iType) {
            base.Channel.EditPlayer2(id, sEmail, sFname, sLname, iType);
        }
        
        public System.Threading.Tasks.Task EditPlayer2Async(int id, string sEmail, string sFname, string sLname, int iType) {
            return base.Channel.EditPlayer2Async(id, sEmail, sFname, sLname, iType);
        }
        
        public bool ValidatePlayer(string sUsername, string sPassword) {
            return base.Channel.ValidatePlayer(sUsername, sPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ValidatePlayerAsync(string sUsername, string sPassword) {
            return base.Channel.ValidatePlayerAsync(sUsername, sPassword);
        }
        
        public System.Nullable<int> GetUserID(string sUsername) {
            return base.Channel.GetUserID(sUsername);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<int>> GetUserIDAsync(string sUsername) {
            return base.Channel.GetUserIDAsync(sUsername);
        }
        
        public bool ValidateAdmin(string sUsername, string sPassword) {
            return base.Channel.ValidateAdmin(sUsername, sPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAdminAsync(string sUsername, string sPassword) {
            return base.Channel.ValidateAdminAsync(sUsername, sPassword);
        }
        
        public bool ValidateAdmin2(int userId) {
            return base.Channel.ValidateAdmin2(userId);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAdmin2Async(int userId) {
            return base.Channel.ValidateAdmin2Async(userId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IHeroController")]
    public interface IHeroController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/CreateHero", ReplyAction="http://tempuri.org/IHeroController/CreateHeroResponse")]
        void CreateHero(int MondeID, int compteId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/CreateHero", ReplyAction="http://tempuri.org/IHeroController/CreateHeroResponse")]
        System.Threading.Tasks.Task CreateHeroAsync(int MondeID, int compteId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/EditHero", ReplyAction="http://tempuri.org/IHeroController/EditHeroResponse")]
        void EditHero(int HeroId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/EditHero", ReplyAction="http://tempuri.org/IHeroController/EditHeroResponse")]
        System.Threading.Tasks.Task EditHeroAsync(int HeroId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/SetHeroPos", ReplyAction="http://tempuri.org/IHeroController/SetHeroPosResponse")]
        void SetHeroPos(int HeroId, int x, int y, string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/SetHeroPos", ReplyAction="http://tempuri.org/IHeroController/SetHeroPosResponse")]
        System.Threading.Tasks.Task SetHeroPosAsync(int HeroId, int x, int y, string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/ConnectHero", ReplyAction="http://tempuri.org/IHeroController/ConnectHeroResponse")]
        void ConnectHero(int heroid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/ConnectHero", ReplyAction="http://tempuri.org/IHeroController/ConnectHeroResponse")]
        System.Threading.Tasks.Task ConnectHeroAsync(int heroid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/DeleteHero", ReplyAction="http://tempuri.org/IHeroController/DeleteHeroResponse")]
        void DeleteHero(int HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/DeleteHero", ReplyAction="http://tempuri.org/IHeroController/DeleteHeroResponse")]
        System.Threading.Tasks.Task DeleteHeroAsync(int HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/GetListHero", ReplyAction="http://tempuri.org/IHeroController/GetListHeroResponse")]
        System.Collections.Generic.List<HugoWorldServiceRef.Hero> GetListHero(int compteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/GetListHero", ReplyAction="http://tempuri.org/IHeroController/GetListHeroResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Hero>> GetListHeroAsync(int compteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/DeconnectHero", ReplyAction="http://tempuri.org/IHeroController/DeconnectHeroResponse")]
        void DeconnectHero(int heroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/DeconnectHero", ReplyAction="http://tempuri.org/IHeroController/DeconnectHeroResponse")]
        System.Threading.Tasks.Task DeconnectHeroAsync(int heroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/GetListHeroNearHero", ReplyAction="http://tempuri.org/IHeroController/GetListHeroNearHeroResponse")]
        System.Collections.Generic.List<HugoWorldServiceRef.Hero> GetListHeroNearHero(int heroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/GetListHeroNearHero", ReplyAction="http://tempuri.org/IHeroController/GetListHeroNearHeroResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Hero>> GetListHeroNearHeroAsync(int heroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/GetElementsArroundHero", ReplyAction="http://tempuri.org/IHeroController/GetElementsArroundHeroResponse")]
        HugoWorldServiceRef.Elements GetElementsArroundHero(int HeroId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHeroController/GetElementsArroundHero", ReplyAction="http://tempuri.org/IHeroController/GetElementsArroundHeroResponse")]
        System.Threading.Tasks.Task<HugoWorldServiceRef.Elements> GetElementsArroundHeroAsync(int HeroId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHeroControllerChannel : HugoWorldServiceRef.IHeroController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HeroControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IHeroController>, HugoWorldServiceRef.IHeroController {
        
        public HeroControllerClient() {
        }
        
        public HeroControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HeroControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeroControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HeroControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateHero(int MondeID, int compteId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent, string name) {
            base.Channel.CreateHero(MondeID, compteId, classeId, X, Y, niveau, dex, str, stamina, Int, experience, argent, name);
        }
        
        public System.Threading.Tasks.Task CreateHeroAsync(int MondeID, int compteId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent, string name) {
            return base.Channel.CreateHeroAsync(MondeID, compteId, classeId, X, Y, niveau, dex, str, stamina, Int, experience, argent, name);
        }
        
        public void EditHero(int HeroId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent) {
            base.Channel.EditHero(HeroId, classeId, X, Y, niveau, dex, str, stamina, Int, experience, argent);
        }
        
        public System.Threading.Tasks.Task EditHeroAsync(int HeroId, int classeId, int X, int Y, int niveau, int dex, int str, int stamina, int Int, long experience, decimal argent) {
            return base.Channel.EditHeroAsync(HeroId, classeId, X, Y, niveau, dex, str, stamina, Int, experience, argent);
        }
        
        public void SetHeroPos(int HeroId, int x, int y, string area) {
            base.Channel.SetHeroPos(HeroId, x, y, area);
        }
        
        public System.Threading.Tasks.Task SetHeroPosAsync(int HeroId, int x, int y, string area) {
            return base.Channel.SetHeroPosAsync(HeroId, x, y, area);
        }
        
        public void ConnectHero(int heroid) {
            base.Channel.ConnectHero(heroid);
        }
        
        public System.Threading.Tasks.Task ConnectHeroAsync(int heroid) {
            return base.Channel.ConnectHeroAsync(heroid);
        }
        
        public void DeleteHero(int HeroId) {
            base.Channel.DeleteHero(HeroId);
        }
        
        public System.Threading.Tasks.Task DeleteHeroAsync(int HeroId) {
            return base.Channel.DeleteHeroAsync(HeroId);
        }
        
        public System.Collections.Generic.List<HugoWorldServiceRef.Hero> GetListHero(int compteId) {
            return base.Channel.GetListHero(compteId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Hero>> GetListHeroAsync(int compteId) {
            return base.Channel.GetListHeroAsync(compteId);
        }
        
        public void DeconnectHero(int heroId) {
            base.Channel.DeconnectHero(heroId);
        }
        
        public System.Threading.Tasks.Task DeconnectHeroAsync(int heroId) {
            return base.Channel.DeconnectHeroAsync(heroId);
        }
        
        public System.Collections.Generic.List<HugoWorldServiceRef.Hero> GetListHeroNearHero(int heroId) {
            return base.Channel.GetListHeroNearHero(heroId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<HugoWorldServiceRef.Hero>> GetListHeroNearHeroAsync(int heroId) {
            return base.Channel.GetListHeroNearHeroAsync(heroId);
        }
        
        public HugoWorldServiceRef.Elements GetElementsArroundHero(int HeroId) {
            return base.Channel.GetElementsArroundHero(HeroId);
        }
        
        public System.Threading.Tasks.Task<HugoWorldServiceRef.Elements> GetElementsArroundHeroAsync(int HeroId) {
            return base.Channel.GetElementsArroundHeroAsync(HeroId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IMonstreController")]
    public interface IMonstreController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonstreController/CreateMonster", ReplyAction="http://tempuri.org/IMonstreController/CreateMonsterResponse")]
        void CreateMonster(int Mondeid, int x, int y, int HP, string sname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonstreController/CreateMonster", ReplyAction="http://tempuri.org/IMonstreController/CreateMonsterResponse")]
        System.Threading.Tasks.Task CreateMonsterAsync(int Mondeid, int x, int y, int HP, string sname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonstreController/DeleteMonster", ReplyAction="http://tempuri.org/IMonstreController/DeleteMonsterResponse")]
        void DeleteMonster(int monsterid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonstreController/DeleteMonster", ReplyAction="http://tempuri.org/IMonstreController/DeleteMonsterResponse")]
        System.Threading.Tasks.Task DeleteMonsterAsync(int monsterid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonstreController/EditMonster", ReplyAction="http://tempuri.org/IMonstreController/EditMonsterResponse")]
        void EditMonster(int MonsterID, string sNom, int iLvl, int ix, int iy, int iPv, int iDmgMin, int iDmgMax);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMonstreController/EditMonster", ReplyAction="http://tempuri.org/IMonstreController/EditMonsterResponse")]
        System.Threading.Tasks.Task EditMonsterAsync(int MonsterID, string sNom, int iLvl, int ix, int iy, int iPv, int iDmgMin, int iDmgMax);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMonstreControllerChannel : HugoWorldServiceRef.IMonstreController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MonstreControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IMonstreController>, HugoWorldServiceRef.IMonstreController {
        
        public MonstreControllerClient() {
        }
        
        public MonstreControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MonstreControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonstreControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MonstreControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateMonster(int Mondeid, int x, int y, int HP, string sname) {
            base.Channel.CreateMonster(Mondeid, x, y, HP, sname);
        }
        
        public System.Threading.Tasks.Task CreateMonsterAsync(int Mondeid, int x, int y, int HP, string sname) {
            return base.Channel.CreateMonsterAsync(Mondeid, x, y, HP, sname);
        }
        
        public void DeleteMonster(int monsterid) {
            base.Channel.DeleteMonster(monsterid);
        }
        
        public System.Threading.Tasks.Task DeleteMonsterAsync(int monsterid) {
            return base.Channel.DeleteMonsterAsync(monsterid);
        }
        
        public void EditMonster(int MonsterID, string sNom, int iLvl, int ix, int iy, int iPv, int iDmgMin, int iDmgMax) {
            base.Channel.EditMonster(MonsterID, sNom, iLvl, ix, iy, iPv, iDmgMin, iDmgMax);
        }
        
        public System.Threading.Tasks.Task EditMonsterAsync(int MonsterID, string sNom, int iLvl, int ix, int iy, int iPv, int iDmgMin, int iDmgMax) {
            return base.Channel.EditMonsterAsync(MonsterID, sNom, iLvl, ix, iy, iPv, iDmgMin, iDmgMax);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IEffetItemController")]
    public interface IEffetItemController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEffetItemController/CreateEffetItem", ReplyAction="http://tempuri.org/IEffetItemController/CreateEffetItemResponse")]
        void CreateEffetItem(int itemId, int typeEffet, int valeurEffet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEffetItemController/CreateEffetItem", ReplyAction="http://tempuri.org/IEffetItemController/CreateEffetItemResponse")]
        System.Threading.Tasks.Task CreateEffetItemAsync(int itemId, int typeEffet, int valeurEffet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEffetItemController/DeleteEffetItem", ReplyAction="http://tempuri.org/IEffetItemController/DeleteEffetItemResponse")]
        void DeleteEffetItem(int effetItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEffetItemController/DeleteEffetItem", ReplyAction="http://tempuri.org/IEffetItemController/DeleteEffetItemResponse")]
        System.Threading.Tasks.Task DeleteEffetItemAsync(int effetItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEffetItemController/EditEffetItem", ReplyAction="http://tempuri.org/IEffetItemController/EditEffetItemResponse")]
        void EditEffetItem(int effetItemId, int typeEffet, int valeurEffet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEffetItemController/EditEffetItem", ReplyAction="http://tempuri.org/IEffetItemController/EditEffetItemResponse")]
        System.Threading.Tasks.Task EditEffetItemAsync(int effetItemId, int typeEffet, int valeurEffet);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEffetItemControllerChannel : HugoWorldServiceRef.IEffetItemController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EffetItemControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IEffetItemController>, HugoWorldServiceRef.IEffetItemController {
        
        public EffetItemControllerClient() {
        }
        
        public EffetItemControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EffetItemControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EffetItemControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EffetItemControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateEffetItem(int itemId, int typeEffet, int valeurEffet) {
            base.Channel.CreateEffetItem(itemId, typeEffet, valeurEffet);
        }
        
        public System.Threading.Tasks.Task CreateEffetItemAsync(int itemId, int typeEffet, int valeurEffet) {
            return base.Channel.CreateEffetItemAsync(itemId, typeEffet, valeurEffet);
        }
        
        public void DeleteEffetItem(int effetItemId) {
            base.Channel.DeleteEffetItem(effetItemId);
        }
        
        public System.Threading.Tasks.Task DeleteEffetItemAsync(int effetItemId) {
            return base.Channel.DeleteEffetItemAsync(effetItemId);
        }
        
        public void EditEffetItem(int effetItemId, int typeEffet, int valeurEffet) {
            base.Channel.EditEffetItem(effetItemId, typeEffet, valeurEffet);
        }
        
        public System.Threading.Tasks.Task EditEffetItemAsync(int effetItemId, int typeEffet, int valeurEffet) {
            return base.Channel.EditEffetItemAsync(effetItemId, typeEffet, valeurEffet);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IInventaireHeroController")]
    public interface IInventaireHeroController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventaireHeroController/AddItemToHero", ReplyAction="http://tempuri.org/IInventaireHeroController/AddItemToHeroResponse")]
        bool AddItemToHero(int heroid, int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventaireHeroController/AddItemToHero", ReplyAction="http://tempuri.org/IInventaireHeroController/AddItemToHeroResponse")]
        System.Threading.Tasks.Task<bool> AddItemToHeroAsync(int heroid, int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventaireHeroController/DeleteItemFromHero", ReplyAction="http://tempuri.org/IInventaireHeroController/DeleteItemFromHeroResponse")]
        void DeleteItemFromHero(int heroid, int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInventaireHeroController/DeleteItemFromHero", ReplyAction="http://tempuri.org/IInventaireHeroController/DeleteItemFromHeroResponse")]
        System.Threading.Tasks.Task DeleteItemFromHeroAsync(int heroid, int itemid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInventaireHeroControllerChannel : HugoWorldServiceRef.IInventaireHeroController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventaireHeroControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IInventaireHeroController>, HugoWorldServiceRef.IInventaireHeroController {
        
        public InventaireHeroControllerClient() {
        }
        
        public InventaireHeroControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventaireHeroControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventaireHeroControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventaireHeroControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddItemToHero(int heroid, int itemid) {
            return base.Channel.AddItemToHero(heroid, itemid);
        }
        
        public System.Threading.Tasks.Task<bool> AddItemToHeroAsync(int heroid, int itemid) {
            return base.Channel.AddItemToHeroAsync(heroid, itemid);
        }
        
        public void DeleteItemFromHero(int heroid, int itemid) {
            base.Channel.DeleteItemFromHero(heroid, itemid);
        }
        
        public System.Threading.Tasks.Task DeleteItemFromHeroAsync(int heroid, int itemid) {
            return base.Channel.DeleteItemFromHeroAsync(heroid, itemid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IItemController")]
    public interface IItemController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemController/CreateItem", ReplyAction="http://tempuri.org/IItemController/CreateItemResponse")]
        void CreateItem(int mondeId, int x, int y, string nom, string description, decimal poids, int quantite, int reqDexterite, int reqEndurance, int reqForce, int reqIntelligence, int reqNiveau, decimal valeurArgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemController/CreateItem", ReplyAction="http://tempuri.org/IItemController/CreateItemResponse")]
        System.Threading.Tasks.Task CreateItemAsync(int mondeId, int x, int y, string nom, string description, decimal poids, int quantite, int reqDexterite, int reqEndurance, int reqForce, int reqIntelligence, int reqNiveau, decimal valeurArgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemController/DeleteItem", ReplyAction="http://tempuri.org/IItemController/DeleteItemResponse")]
        void DeleteItem(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemController/DeleteItem", ReplyAction="http://tempuri.org/IItemController/DeleteItemResponse")]
        System.Threading.Tasks.Task DeleteItemAsync(int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemController/EditItem", ReplyAction="http://tempuri.org/IItemController/EditItemResponse")]
        void EditItem(int itemId, int quantite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IItemController/EditItem", ReplyAction="http://tempuri.org/IItemController/EditItemResponse")]
        System.Threading.Tasks.Task EditItemAsync(int itemId, int quantite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IItemControllerChannel : HugoWorldServiceRef.IItemController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IItemController>, HugoWorldServiceRef.IItemController {
        
        public ItemControllerClient() {
        }
        
        public ItemControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ItemControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ItemControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateItem(int mondeId, int x, int y, string nom, string description, decimal poids, int quantite, int reqDexterite, int reqEndurance, int reqForce, int reqIntelligence, int reqNiveau, decimal valeurArgent) {
            base.Channel.CreateItem(mondeId, x, y, nom, description, poids, quantite, reqDexterite, reqEndurance, reqForce, reqIntelligence, reqNiveau, valeurArgent);
        }
        
        public System.Threading.Tasks.Task CreateItemAsync(int mondeId, int x, int y, string nom, string description, decimal poids, int quantite, int reqDexterite, int reqEndurance, int reqForce, int reqIntelligence, int reqNiveau, decimal valeurArgent) {
            return base.Channel.CreateItemAsync(mondeId, x, y, nom, description, poids, quantite, reqDexterite, reqEndurance, reqForce, reqIntelligence, reqNiveau, valeurArgent);
        }
        
        public void DeleteItem(int itemId) {
            base.Channel.DeleteItem(itemId);
        }
        
        public System.Threading.Tasks.Task DeleteItemAsync(int itemId) {
            return base.Channel.DeleteItemAsync(itemId);
        }
        
        public void EditItem(int itemId, int quantite) {
            base.Channel.EditItem(itemId, quantite);
        }
        
        public System.Threading.Tasks.Task EditItemAsync(int itemId, int quantite) {
            return base.Channel.EditItemAsync(itemId, quantite);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HugoWorldServiceRef.IObjectMondeController")]
    public interface IObjectMondeController {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectMondeController/CreateObjectMonde", ReplyAction="http://tempuri.org/IObjectMondeController/CreateObjectMondeResponse")]
        void CreateObjectMonde(int iX, int iY, string sDescription, int iTypeObjet, int iMondeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectMondeController/CreateObjectMonde", ReplyAction="http://tempuri.org/IObjectMondeController/CreateObjectMondeResponse")]
        System.Threading.Tasks.Task CreateObjectMondeAsync(int iX, int iY, string sDescription, int iTypeObjet, int iMondeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectMondeController/DeleteObjectMonde", ReplyAction="http://tempuri.org/IObjectMondeController/DeleteObjectMondeResponse")]
        void DeleteObjectMonde(int objectMondeId, int mondeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectMondeController/DeleteObjectMonde", ReplyAction="http://tempuri.org/IObjectMondeController/DeleteObjectMondeResponse")]
        System.Threading.Tasks.Task DeleteObjectMondeAsync(int objectMondeId, int mondeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectMondeController/EditObjectMondeDescription", ReplyAction="http://tempuri.org/IObjectMondeController/EditObjectMondeDescriptionResponse")]
        void EditObjectMondeDescription(int objectMondeId, string sDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IObjectMondeController/EditObjectMondeDescription", ReplyAction="http://tempuri.org/IObjectMondeController/EditObjectMondeDescriptionResponse")]
        System.Threading.Tasks.Task EditObjectMondeDescriptionAsync(int objectMondeId, string sDescription);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IObjectMondeControllerChannel : HugoWorldServiceRef.IObjectMondeController, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ObjectMondeControllerClient : System.ServiceModel.ClientBase<HugoWorldServiceRef.IObjectMondeController>, HugoWorldServiceRef.IObjectMondeController {
        
        public ObjectMondeControllerClient() {
        }
        
        public ObjectMondeControllerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ObjectMondeControllerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectMondeControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ObjectMondeControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateObjectMonde(int iX, int iY, string sDescription, int iTypeObjet, int iMondeId) {
            base.Channel.CreateObjectMonde(iX, iY, sDescription, iTypeObjet, iMondeId);
        }
        
        public System.Threading.Tasks.Task CreateObjectMondeAsync(int iX, int iY, string sDescription, int iTypeObjet, int iMondeId) {
            return base.Channel.CreateObjectMondeAsync(iX, iY, sDescription, iTypeObjet, iMondeId);
        }
        
        public void DeleteObjectMonde(int objectMondeId, int mondeid) {
            base.Channel.DeleteObjectMonde(objectMondeId, mondeid);
        }
        
        public System.Threading.Tasks.Task DeleteObjectMondeAsync(int objectMondeId, int mondeid) {
            return base.Channel.DeleteObjectMondeAsync(objectMondeId, mondeid);
        }
        
        public void EditObjectMondeDescription(int objectMondeId, string sDescription) {
            base.Channel.EditObjectMondeDescription(objectMondeId, sDescription);
        }
        
        public System.Threading.Tasks.Task EditObjectMondeDescriptionAsync(int objectMondeId, string sDescription) {
            return base.Channel.EditObjectMondeDescriptionAsync(objectMondeId, sDescription);
        }
    }
}
